name: deploy github runner VM
on:
#   push:
#     branches:
#       - main
  workflow_dispatch:


jobs:
  deploy:
    runs-on: self-hosted
    env:
      PM_API_TOKEN_ID: ${{ secrets.PM_API_TOKEN_ID }}
      PM_API_TOKEN_SECRET: ${{ secrets.PM_API_TOKEN_SECRET }}
    steps:
      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip
        
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.1"
          terraform_wrapper: true

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ./tf-deploy-vm-github-runner

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        working-directory: ./tf-deploy-vm-github-runner

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./tf-deploy-vm-github-runner

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -no-color
        continue-on-error: true
        working-directory: ./tf-deploy-vm-github-runner

      - name: Terraform Apply
        id: apply
        run: |
          echo "Deploying GitHub Runner VM..."
          if [ -f tfplan ]; then
            echo "Applying Terraform plan..."
            terraform apply tfplan -auto-approve
          else
            echo "No Terraform plan found. Exiting."
            exit 1
          fi
        working-directory: ./tf-deploy-vm-github-runner

